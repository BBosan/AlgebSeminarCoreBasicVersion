@model PaginatedList<SeminarCore2.Models.Seminar>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create" class="btn btn-sm btn-dark">Create New</a>
</p>

<form asp-action="Index" method="get" class="form-inline">
    <div class="form-group mb-2">
        <label for="src" class="mr-2">Search by Naziv:</label>
        <input type="text" id="src" class="form-control form-control-sm mr-1" name="SearchString" placeholder="Enter Search Keyword" value="@ViewData["CurrentFilter"]">
    </div>
    <button type="submit" class="btn btn-sm btn-dark mb-2">Search</button>
</form>

@*<form asp-action="Index" method="get">
        <div class="form-actions no-color">
            <p>
                Search by Naziv: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
                <input type="submit" value="Search" class="btn btn-sm btn-dark" /> |
                <a asp-action="Index">Back to Full List</a>
            </p>
        </div>
    </form>*@

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NazivSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(model => model[0].Naziv)</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Datum)
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DatumSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(model => model[0].Datum)</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].PopunjenDaNe)
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["BrojSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(model => model[0].Predbiljezbe)</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Naziv)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Opis)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Datum)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PopunjenDaNe)
                </td>
                <td>
                    @if (item.Predbiljezbe.Count > 0)
                    {
                        @Html.DisplayFor(modelItem => item.Predbiljezbe.Count)
                    }
                    else
                    {
                        <b>Nema</b>
                    }
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.SeminarID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.SeminarID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.SeminarID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>


@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

@*<span class="badge badge-dark p-2">@(Model.PageIndex).</span>*@

<div class="btn btn-light" style="pointer-events: none">
    Page <span class="badge badge-primary">@(Model.PageIndex)</span>
</div>

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-light @prevDisabled">
    Previous
</a>

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-light @nextDisabled">
    Next
</a>

